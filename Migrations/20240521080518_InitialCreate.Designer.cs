// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ODataCovid.Models;

#nullable disable

namespace ODataCovid.Migrations
{
    [DbContext(typeof(CovidContext))]
    [Migration("20240521080518_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ODataCovid.Models.Active", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CountryRegionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("day")
                        .HasColumnType("datetime2");

                    b.Property<float?>("value")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("CountryRegionId");

                    b.ToTable("Actives", (string)null);
                });

            modelBuilder.Entity("ODataCovid.Models.Confirmed", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CountryRegionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("day")
                        .HasColumnType("datetime2");

                    b.Property<float?>("value")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("CountryRegionId");

                    b.ToTable("Confirmeds", (string)null);
                });

            modelBuilder.Entity("ODataCovid.Models.CountryRegion", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("countryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("latitude")
                        .HasColumnType("real");

                    b.Property<float?>("longitude")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("CountryRegion", (string)null);
                });

            modelBuilder.Entity("ODataCovid.Models.CovidDaily", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CountryRegionId")
                        .HasColumnType("bigint")
                        .HasColumnName("countryregionId");

                    b.Property<DateTime?>("day")
                        .HasColumnType("datetime2");

                    b.Property<long?>("personActive")
                        .HasColumnType("bigint");

                    b.Property<long?>("personConfirmed")
                        .HasColumnType("bigint");

                    b.Property<long?>("personDeath")
                        .HasColumnType("bigint");

                    b.Property<long?>("personRecovered")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("CountryRegionId");

                    b.ToTable("CovidDaily", (string)null);
                });

            modelBuilder.Entity("ODataCovid.Models.Death", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CountryRegionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("day")
                        .HasColumnType("datetime2");

                    b.Property<float?>("value")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("CountryRegionId");

                    b.ToTable("Deaths", (string)null);
                });

            modelBuilder.Entity("ODataCovid.Models.Recovered", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CountryRegionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("day")
                        .HasColumnType("datetime2");

                    b.Property<float?>("value")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("CountryRegionId");

                    b.ToTable("Recovereds", (string)null);
                });

            modelBuilder.Entity("ODataCovid.Models.Active", b =>
                {
                    b.HasOne("ODataCovid.Models.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("CountryRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryRegion");
                });

            modelBuilder.Entity("ODataCovid.Models.Confirmed", b =>
                {
                    b.HasOne("ODataCovid.Models.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("CountryRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryRegion");
                });

            modelBuilder.Entity("ODataCovid.Models.CovidDaily", b =>
                {
                    b.HasOne("ODataCovid.Models.CountryRegion", "CountryRegion")
                        .WithMany("CovidDailies")
                        .HasForeignKey("CountryRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryRegion");
                });

            modelBuilder.Entity("ODataCovid.Models.Death", b =>
                {
                    b.HasOne("ODataCovid.Models.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("CountryRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryRegion");
                });

            modelBuilder.Entity("ODataCovid.Models.Recovered", b =>
                {
                    b.HasOne("ODataCovid.Models.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("CountryRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryRegion");
                });

            modelBuilder.Entity("ODataCovid.Models.CountryRegion", b =>
                {
                    b.Navigation("CovidDailies");
                });
#pragma warning restore 612, 618
        }
    }
}
